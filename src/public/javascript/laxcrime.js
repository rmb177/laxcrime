// Generated by CoffeeScript 1.3.1
(function() {
  var initializeAuthorizePage, initializeMapPage;

  initializeAuthorizePage = function() {
    return $('#passwordSubmit').click(function() {
      return $.ajax({
        url: 'authorize_user',
        type: "POST",
        data: {
          password: $('#passwordField').val()
        },
        success: function(data) {
          if ("false" === data) {
            return $('#errorMessage').show();
          } else {
            $('#passwordPage').css('display', 'none');
            $('#mapPage').css('display', 'block');
            return initializeMapPage();
          }
        }
      });
    });
  };

  initializeMapPage = function() {
    var fCurrentInfoWindow, fMap, fMarkers, fSelectedDate, getUserLocation, kCenterOfLaCrosse, kDefaultZoomLevel, kEarliestDateWithData, kZoomLevelWithLocation, setupMapControls, updateMap;
    kEarliestDateWithData = new Date(2012, 0, 1);
    kCenterOfLaCrosse = new google.maps.LatLng(43.81211, -91.22695);
    kDefaultZoomLevel = 15;
    kZoomLevelWithLocation = 16;
    /* array of markers on the map
    */

    fMarkers = [];
    fCurrentInfoWindow = null;
    fMap = null;
    fSelectedDate = null;
    /*
       Set up the map and the calendar to allow the user
       to select different dates.
    */

    setupMapControls = function() {
      var datePickerDiv, options, today;
      options = {
        center: kCenterOfLaCrosse,
        zoom: kDefaultZoomLevel,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      fMap = new google.maps.Map(document.getElementById("mapPage"), options);
      datePickerDiv = document.createElement('div');
      datePickerDiv.setAttribute('id', 'datePickerDiv');
      fMap.controls[google.maps.ControlPosition.TOP_CENTER].push(datePickerDiv);
      today = new Date();
      $(datePickerDiv).datepicker({
        minDate: kEarliestDateWithData,
        maxDate: new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1)
      });
      fSelectedDate = $(datePickerDiv).datepicker('getDate');
      return google.maps.event.addDomListener(datePickerDiv, 'click', function() {
        var marker, newDate, _i, _len;
        newDate = $(datePickerDiv).datepicker('getDate');
        if (newDate.getTime() !== fSelectedDate.getTime()) {
          for (_i = 0, _len = fMarkers.length; _i < _len; _i++) {
            marker = fMarkers[_i];
            marker.setMap(null);
          }
          fMarkers = [];
          fSelectedDate = newDate;
          return updateMap();
        }
      });
    };
    /*
       Check if the user's browser supports geolocation and if so, update map options to center
       on the location and zoom in a little bit.
    */

    getUserLocation = function() {
      if (navigator.geolocation) {
        return navigator.geolocation.getCurrentPosition(function(position) {
          fMap.setZoom(kZoomLevelWithLocation);
          return fMap.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
        });
      }
    };
    updateMap = function() {
      return $.ajax({
        url: encodeURI('get_incident_reports?date=' + (fSelectedDate.getMonth() + 1) + '/' + fSelectedDate.getDate() + '/' + fSelectedDate.getFullYear()),
        success: function(data) {
          var incident, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            incident = data[_i];
            _results.push((function(incident) {
              var marker;
              marker = new google.maps.Marker({
                position: new google.maps.LatLng(parseFloat(incident.lat), parseFloat(incident.long)),
                title: incident.description + ', ' + incident.address + ' ' + incident.time
              });
              marker.setMap(fMap);
              fMarkers.push(marker);
              return google.maps.event.addListener(marker, 'click', function() {
                if (null !== fCurrentInfoWindow) {
                  fCurrentInfoWindow.close();
                }
                fCurrentInfoWindow = new google.maps.InfoWindow();
                fCurrentInfoWindow.setContent(marker.title);
                fCurrentInfoWindow.open(fMap, marker);
                return false;
              });
            })(incident));
          }
          return _results;
        },
        error: function() {
          return alert('Error retrieving logs for the selected date.');
        }
      });
    };
    setupMapControls();
    getUserLocation();
    return updateMap();
  };

  $(document).ready(initializeAuthorizePage);

}).call(this);
